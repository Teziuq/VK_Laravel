Перед началом работы:
    Установить XAMPP (для бд(phpMyAdmin) и php)

----------Что есть сейчас:-------------

были прописанны команды:
- php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
- composer create-project --prefer-dist laravel/laravel vk-bot
- npm install vite
- php artisan migrate                           (для миграции с базой данных phpMyAdmin, типо обновление и тд)
- php artisan make:model PublicModel -m
- php artisan make:model ContestModel -m
- php artisan migrate
- php artisan make:controller PublicController  (для управления данными Public)
- php artisan make:controller ContestController (для управления данными Contest)
- composer require laravel/sanctum              (Laravel Sanctum вместо Passport. Sanctum является более легким альтернативным инструментом для аутентификации в Laravel )





------Чтобы запускать этат шайтан машина, нам нужна каманда:-------

php artisan serve


Была создана база данных phpMyAdmin ; Сервер: 127.0.0.1

Что нужно сделать?

На php laravel бот вк
Разработать приложение на php laravel После авторизации страница добавления пабликов и список токенов от паблика.
Кнопка создать конкурс, выбираю паблики, выбираю приз. Приз это анимированный, голд пак в вк либо голоса.
Алгоритм такой. Я создаю конкурс, текст, картинку, далее выбираю приз. Задания однотипное это лайк и проверка подписки. После создания конкурса он автоматически публикуется в выбранных пабликах. Затем когда приходит время розыгрыша скрипт публикует пост с итогом и автоматически отправлят приз. 

По дизайну тут так:
С начала страница авторизации: login and password, После нас встречает страница с 2 вкладками: База пабликов (тут только таблица (ID, VK ID, Название, Token, Действия(edit/delite)) и кнопка добавить паблик) и вкладка Конкурсы (Таблица(ID, Картинка, Текст, Время розыгрыша, id пабликов и действия) и кнопка Создать конкурс)

По идее главно чтобы работал бекенд




-------------------------------------------------

Этап 2: Разработка авторизации
Установка и настройка Laravel Passport:

Используйте php artisan make:auth для генерации представлений и контроллера для аутентификации.

-------------------------------------------------        готово






Этап 3: Управление пабликами
Создание страницы для управления пабликами:

Создайте маршруты, контроллер и представления для управления пабликами.
Реализация функционала добавления пабликов:

Создайте методы в контроллере PublicController для добавления, редактирования и удаления пабликов.
Интегрируйте VK API для получения токенов при добавлении пабликов.






Этап 4: Управление конкурсами
Создание страницы для управления конкурсами:

Создайте маршруты, контроллер и представления для управления конкурсами.
Интеграция с VK API для публикации конкурсов:

Создайте методы в контроллере ContestController для добавления, редактирования и удаления конкурсов.
Используйте VK API для публикации конкурсов в выбранных пабликах.
Реализация выбора приза и заданий для конкурса:

Создайте соответствующие модели и контроллеры для призов и заданий.
Свяжите их с моделью конкурса.
Этап 5: Розыгрыш призов
Автоматизированная публикация поста с итогами конкурса:

Создайте команду Artisan для автоматической публикации поста с итогами конкурса в заданное время.
Логика выбора победителей и отправка призов:

Реализуйте логику выбора победителей в контроллере ContestController.
Используйте VK API для отправки призов, включая анимированный голд пак в VK.
Этап 6: Создание интерфейса
Создание страниц с интерфейсом:

Разработайте представления с использованием HTML, CSS, и JavaScript для управления пабликами и конкурсами.
Добавление форм для создания конкурсов:

Интегрируйте формы создания конкурсов с выбором параметров в соответствующие представления.